name: CICD Test
run-name: Running
on:
  push:
    branches:
      - master

env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: cse4186
  AWS_CODE_DEPLOY_APPLICATION: deploy-interview-app
  AWS_CODE_DEPLOY_GROUP: deploy-interview-group

jobs:
  build-with-gradle:
    runs-on: ubuntu-22.04
    steps:
      - name: master 브랜치로 이동
        uses: actions/checkout@v4
        with:
          ref: master
      - name: JDK 21 설치
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'oracle'
      - uses: actions/checkout@v4
      - run: touch ./src/main/resources/application.properties
      - run: echo "${{secrets.APPLICATION}}" > ./src/main/resources/application.properties
      - uses: actions/upload-artifact@v4
        with:
          name: application.properties
          path: ./src/main/resources/application.properties
      - name: gradlew에 실행 권한 부여
        run: chmod +x ./gradlew
      - name: 프로젝트 빌드
        run: ./gradlew clean build -x test
          
    # dockerfile을 통해 이미지를 빌드하고, 이를 docker repo로 push 합니다.
    # 이 때 사용되는 ${{ secrets.DOCKER_REPO }}/directors-dev 가 위에서 만든 도커 repository 입니다.
      - name: Docker build & push to docker repo
        run: |
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker build -f Dockerfile -t ${{ secrets.DOCKER_REPO }}/interview .
            docker push ${{ secrets.DOCKER_REPO }}/interview

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        id: deploy
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          envs: GITHUB_SHA
          script: |
                sudo docker rm -f $(docker ps -qa)
                sudo docker pull ${{ secrets.DOCKER_REPO }}/interview
                docker-compose up -d
                docker image prune -f